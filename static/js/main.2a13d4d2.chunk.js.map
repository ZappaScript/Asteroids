{"version":3,"sources":["qTree.js","App.js","serviceWorker.js","index.js"],"names":["Leaf","p","e","Object","classCallCheck","this","point","entity","Node","hl","children","NW","SW","NE","SE","center","halfLength","qTree","quadTree","root","x","y","createClass","key","value","node","numChildren","printChildren","val","vector","Math","sqrt","circle","v","vectorNorm","radius","console","log","square","squareMaxRadius","squareMinRadius","dirVector","norm","testPoint","pointInsideCircle","quadrant","getQuadrant","aux","getNewPoint","insertPoint","Error","circleSquareIntersection","App","props","_this","possibleConstructorReturn","getPrototypeOf","call","addRandomEntities","i","entities","state","shell","random","cos","PI","sin","push","testField","toString","location","velocityVector","QuadTree","length","setState","rotateVector","angle","drawPlayer","ctx","player","beginPath","l","vN","lineTo","canvasSize","closePath","stroke","strokeStyle","fillStyle","fill","handleInput","keysState","fps","gameLoop","start","Date","now","resetQuadtree","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","err","return","drawCanvas","end","window","setTimeout","addPlayer","radii","prevState","setInterval","concat","parseInt","toUpperCase","slice","handleKeyDown","event","keyCode","which","String","fromCharCode","toLowerCase","handleKeyUp","a","b","c","d","f","g","h","j","k","m","n","o","q","r","s","t","u","w","z","moveTo","drawQuadrant","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","canvas","refs","getContext","clearRect","width","height","drawEntities","innerHeight","react_default","createElement","className","onClick","ref","tabIndex","onKeyDown","onKeyUp","printQuadTree","Component","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2a13d4d2.chunk.js","sourcesContent":["export class Leaf{ //Leaf\n    constructor(p, e){\n        this.point = p;\n        this.entity = e;\n    }\n} \n\nexport class Node{\n    constructor(p, hl){\n        \n        this.children = {\n        NW : null,\n        SW : null,\n        NE : null,\n        SE : null,\n        }\n        this.center = p;\n        this.halfLength = hl;\n    }\n}\n\nexport class quadTree {\n    constructor(){\n        \n        this.root = new Node ({x:0.5, y:0.5},0.5)\n        \n    }\n    printChildren (node, numChildren){\n        if (!node){\n            return;\n        }\n        if (node instanceof Leaf){\n            \n            numChildren.val +=1\n            return;\n        }\n        this.printChildren(node.children.NW, numChildren)\n        this.printChildren(node.children.SW, numChildren)\n        this.printChildren(node.children.NE, numChildren)\n        this.printChildren(node.children.SE, numChildren)\n        return numChildren.val\n\n    }\n   \n    \n    vectorNorm(vector){\n        \n        return Math.sqrt(vector.x * vector.x + vector.y * vector.y)\n\n    }\n    pointInsideCircle(point, circle){\n\n        var v = {x:circle.x - point.x,y: circle.y - point.y}\n        \n        if(this.vectorNorm(v) <=circle.radius){\n            console.log('v, vectorNorm: ', v,this.vectorNorm(v))\n            return true;\n        }\n\n        return false\n\n    }\n    circleSquareIntersection(circle, square){ //will only work with square for the time being\n        //Square outer circle\n        var squareMaxRadius = Math.sqrt(square.halfLength * square.halfLength * 2);\n        var squareMinRadius = square.halfLength;\n        var dirVector = {x:square.center.x - circle.x, y:square.center.y - circle.y } //Could improve on the variable's name\n        console.log('1: ',dirVector)\n        var norm = this.vectorNorm(dirVector)\n        console.log('2: ',norm)\n        dirVector = {x:dirVector.x / norm, y:dirVector.y / norm};\n        console.log('3: ',dirVector)\n        var testPoint = { x: circle.x + dirVector.x * circle.radius, y: circle.y + dirVector.y * circle.radius}\n        console.log('4: ', testPoint)\n\n        if (!this.pointInsideCircle( testPoint,{radius:squareMaxRadius,x:square.center.x,y:square.center.y})){\n            return false;\n        }\n\n        if(this.pointInsideCircle(testPoint,{radius:squareMinRadius,x:square.center.x,y:square.center.y} )){\n            console.log('Point inside inner circle')\n            return true;\n        }\n\n        if(testPoint.x >= square.center.x - square.halfLength && testPoint.x <= square.center.x + square.halfLength \n            && testPoint.y >= square.center.y - square.halfLength && testPoint.y <= square.center.y + square.halfLength )\n            {\n                console.log('Point inside AABB')\n                return true;}\n        return false;\n\n\n        \n\n    }\n\n    insertPoint (point, node, e){\n        \n        \n        let quadrant = this.getQuadrant(point,node);\n\n        \n\n        if(!node.children[quadrant]){\n            \n            node.children[quadrant]  = new Leaf(point, e) //\n            \n            return;\n\n        }\n\n        if(node.children[quadrant] instanceof Leaf){\n            \n            let aux = node.children[quadrant]\n            node.children[quadrant] = new Node(this.getNewPoint(quadrant, node.center, node.halfLength), node.halfLength/2)\n            this.insertPoint(aux.point, node.children[quadrant], aux.entity)\n            this.insertPoint(point, node.children[quadrant], e)\n            return;\n        }\n\n        if(node.children[quadrant] instanceof Node){\n\n            this.insertPoint(point, node.children[quadrant], e)\n\n        }\n\n\n    }\n    getNewPoint(quadrant, point, halfLength){\n        \n        switch (quadrant){\n            case \"NW\":\n            return {x: point.x - halfLength/2, y: point.y + halfLength/2 }\n            case \"SW\":\n            return {x: point.x - halfLength/2, y: point.y - halfLength/2 }\n            case \"NE\":\n            return {x: point.x + halfLength/2, y: point.y + halfLength/2 }\n            case \"SE\":\n            return {x: point.x + halfLength/2, y: point.y - halfLength/2 }\n            default:\n            throw new Error('String not supplied')\n\n        }\n\n    }\n    getQuadrant(p, node){\n        \n        if (p.x <= node.center.x){\n            if(p.y <= node.center.y){\n                return \"SW\";\n            }\n            return \"NW\";\n        }\n        if(p.y <= node.center.y){\n            return \"SE\"\n        }\n        return \"NE\";\n\n    }\n    resetQuadtree(){\n        this.root = new Node ({x:0.5, y:0.5},0.5);\n    }\n    \n}\n\n//export \nexport var qTree = new quadTree();\n\nvar testCircle = {radius:0.125,x:0.875,y:0.875}\n\nvar fauxSquare = {center:{x:0.1,y:0.1},halfLength:0.25}\nqTree.circleSquareIntersection(testCircle,fauxSquare)\n","import React, { Component } from 'react';\nimport './App.css';\nimport {Node, Leaf, qTree} from './qTree';\nimport { isContext } from 'vm';\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.QuadTree = qTree\n    this.canvasSize = 640\n    this.state = {entities:[],player:[], now:Date.now(),fps:0}\n    this.keysState = {'a': false,'b': false,'c': false,'d': false,'e': false,'f': false,'g': false,'h': false,'i': false,'j': false,'k': false,'l': false,'m': false,'n': false,'o': false,'p': false,'q': false,'r': false,'s': false,'t': false,'u': false,'v': false,'w': false,'x': false,'y': false,'z': false}\n    \n   \n  }\n  addRandomEntities = () => { //This is just a test, delete this function later\n\n    for (let i = 0; i < 50;i++){\n      var entities = this.state.entities;\n      var shell = []\n      for (let i = 0; i<12;i++){\n        var radius = 0.02 * Math.random() + 0.01\n       var p = {x:radius*Math.cos( 2 * Math.PI/12 * i ),y:radius * Math.sin(2*Math.PI/12 * i)}\n       shell.push(p)\n      }\n      var entity = {testField:Math.random().toString(),location:{x:Math.random(), y:Math.random()},velocityVector:{x:(Math.random()-0.5) *0.002 ,y:(Math.random()-0.5)*0.002}, shell:shell }\n      entities.push(entity)\n      this.QuadTree.insertPoint(entity.location, this.QuadTree.root, entity)\n      console.log('Number of entities:', entities.length)\n\n\n    }\n    this.setState({entities:entities})\n  }\n  drawQuadrant(ctx,node){\n    if (node instanceof Node){\n      ctx.beginPath();\n      ctx.moveTo(node.center.x * this.canvasSize, (node.center.y + node.halfLength) * this.canvasSize);\n      ctx.lineTo(node.center.x * this.canvasSize, (node.center.y - node.halfLength)*this.canvasSize);\n      ctx.moveTo((node.center.x - node.halfLength) * this.canvasSize,node.center.y * this.canvasSize);\n      ctx.lineTo((node.center.x + node.halfLength) * this.canvasSize,node.center.y * this.canvasSize);\n      ctx.strokeStyle = '#FFFFFF';\n      ctx.stroke();\n      this.drawQuadrant(ctx,node.children.NW)\n      this.drawQuadrant(ctx,node.children.NE)\n      this.drawQuadrant(ctx,node.children.SW)\n      this.drawQuadrant(ctx,node.children.SE)\n      return;\n    }\n    \n    return;\n  }\n  drawEntities(ctx){\n    let entities = this.state.entities;\n\n    ctx.beginPath();\n\n    for (var e of entities){\n      let l = e.shell.length;\n      for (let i = 0; i < l; i++ ){\n\n        ctx.moveTo((e.location.x + e.shell[i%l].x) * this.canvasSize , (e.location.y + e.shell[i%l].y ) * this.canvasSize);\n        ctx.lineTo((e.location.x + e.shell[(i+1)%l].x) * this.canvasSize , (e.location.y + e.shell[(i+1)%l].y ) * this.canvasSize);\n\n      }\n  }\n  ctx.strokeStyle = '#FFFFFF';\n  ctx.stroke()\n\n  }\n  rotateVector = (vector, angle) => {\n    return {x:vector.x*Math.cos(angle)- vector.y * Math.sin(angle), y : vector.x * Math.sin(angle) + vector.y * Math.cos(angle)}\n\n  }\n  drawPlayer= (ctx) => {\n    let player = this.state.player;\n    ctx.beginPath();\n\n  \n      let l = player.shell.length;\n      for (let i = 0; i < l; i++ ){\n        let v = this.rotateVector(player.shell[i%l], player.angle)\n        let vN = this.rotateVector(player.shell[(i+1)%l], player.angle )\n        //ctx.moveTo((player.location.x + v.x) * this.canvasSize , (player.location.y + v.y ) * this.canvasSize);\n        ctx.lineTo((player.location.x + vN.x) * this.canvasSize , (player.location.y + vN.y ) * this.canvasSize);\n\n      }\n  ctx.closePath()\n\n  /*Seems like once you set any of the blur's parameters, you cant switch it off, it's going to have to be a separate canvas if we dont want to apply blur to all\n    draw calls.\n    ctx.shadowOffsetX = player.location.x-player.velocityVector.x\n    ctx.shadowOffsetY = player.location.y-player.velocityVector.y\n    ctx.shadowBlur = 40;\n    ctx.shadowColor= `${parseInt(this.QuadTree.vectorNorm(player.velocityVector)*255*4).toString(16).toUpperCase()}`.slice(-2).repeat(3);\n    ctx.shadowColor= `#FFFFFF`;*/\n  //ctx.filter = 'blur(4px)';\n  \n  ctx.stroke()\n  ctx.strokeStyle = '#00FF00';\n  ctx.fillStyle = \"#8ED6FF70\";\n  ctx.fill();\n\n  }\n  drawCanvas(){\n\n    const canvas = this.refs.canvas;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    this.drawQuadrant(ctx,this.QuadTree.root);\n    this.drawEntities(ctx);\n    this.drawPlayer(ctx);\n    \n\n\n  }\n  handleInput =() => {\n    let player = this.state.player\n    if (this.keysState['a']){\n      \n      player.angle -= (1 / this.state.fps) *  (Math.PI * 90 / 180)\n    \n    }\n    if(this.keysState['d']){\n\n      player.angle += (1 / this.state.fps) *  (Math.PI * 90 / 180)\n\n    }\n    if(this.keysState['w']){\n      //The way I though of limiting speed while applying the desired directios goes as follow:\n      //Let velocityVector be an unit vector, have a variable called speed or magnitude represent velocity\n      //Then, sum the angle vectors multiplied by the velocity.\n      //If their norm is greater than the max allowed speed, sum the unit vectors and then multiply by the velocity\n      //It's hacky and I'm sure it will look weird\n      //Another option would be to sum their vectors, with the new angle having a fixed norm every key press, renormilize and multiply by the\n      //current speed. It wont look good either but at least makes a little bit more sense\n      //But, is there any reason why there should be a max velocity?\n      player.velocityVector.x += Math.cos(player.angle) * 0.0001 * this.state.fps\n      player.velocityVector.y += Math.sin(player.angle) * 0.0001 * this.state.fps\n      \n    }\n\n    this.setState({player:player})\n  }\n\n  gameLoop = () =>{\n    var entities = this.state.entities;\n    var player = this.state.player\n    var start = Date.now()\n    this.handleInput()\n    if(entities.length>0){\n      \n      this.QuadTree.resetQuadtree()\n      for (var e of entities){\n      e.location.x += e.velocityVector.x\n      e.location.y += e.velocityVector.y\n      if (e.location.x < 0){e.location.x = 0.99999999}\n      if (e.location.y < 0){e.location.y = 0.99999999}\n      if (e.location.x > 1){e.location.x = 0.00000001}\n      if (e.location.y > 1){e.location.y = 0.00000001}\n      this.QuadTree.insertPoint(e.location,this.QuadTree.root,e)\n    }\n\n    player.location.x += player.velocityVector.x\n    player.location.y += player.velocityVector.y\n    if (player.location.x < 0){player.location.x = 0.99999999}\n    if (player.location.y < 0){player.location.y = 0.99999999}\n    if (player.location.x > 1){player.location.x = 0.00000001}\n    if (player.location.y > 1){player.location.y = 0.00000001}\n    this.QuadTree.insertPoint(player.location,this.QuadTree.root,player)\n    this.drawCanvas()\n\n    var end = Date.now()\n    this.setState({entities:entities,fps:(end-start)})\n    window.setTimeout(this.gameLoop,16)\n  }\n  }\n  addPlayer = () =>{\n    var radii = [1,0.5,0.2,0.5]\n    var shell = []\n      for (let i = 0; i<4;i++){\n        //var radius = 0.02 * Math.random() + 0.01\n        let radius = 0.02 * radii[i]\n       var p = {x:radius*Math.cos( 2 * Math.PI/4 * i ),y:radius * Math.sin(2*Math.PI/4 * i)}\n       shell.push(p)\n      }\n      var player = {testField:Math.random().toString(),location:{x:0.5, y:0.5}, velocityVector:{x:0 ,y:0}, shell:shell, angle:0 }\n      \n      this.QuadTree.insertPoint(player.location, this.QuadTree.root, player)\n    this.setState((prevState)=>{this.setState({player:player})} )\n    //setInterval(()=>{console.log(((this.QuadTree.vectorNorm(player.velocityVector)*255).toFixed(0)).toString(16)) },500 )\n    //setInterval(()=>{console.log(((10).toFixed(1)).toString(16)) },500 )\n    //`00${parseInt(this.QuadTree.vectorNorm(player.velocityVector)*255).toString(16).toUpperCase()}`.slice(-2)\n    setInterval(()=>{console.log( \"FFFFFF\"+`00${parseInt(this.QuadTree.vectorNorm(player.velocityVector)*255).toString(16).toUpperCase()}`.slice(-2)) },500 )\n  }\n\n  componentWillMount(){\n    this.addRandomEntities()\n    this.addPlayer()\n    window.setTimeout(this.gameLoop, 10);\n\n    \n  }\n\n  handleKeyDown = (event) =>{\n\n    var x = event.keyCode || event.which;\n    x = String.fromCharCode(x)\n    this.keysState[ x.toLowerCase() ] = true;\n\n  }\n\n  handleKeyUp = (event) => {\n    \n    var x = event.keyCode || event.which;\n    console.log(x)\n    this.keysState[ String.fromCharCode(x).toLowerCase()] = false;\n\n  }\n  //Spread operator is half as fast as Object.assign()\n  //{this.state.entities.map((i,k)=>{return <div key={k} style={Object.assign({left:i.location.x * size + 50 ,bottom:i.location.y * size + 50},style) } > . </div> } )} \n  render() {\n    var size = (window.innerHeight * 0.9)\n    return (\n      <div className=\"App\">\n\n        <button onClick={this.addRandomEntities} > Add a number of random entities </button>   \n        <canvas ref=\"canvas\" width={window.innerHeight} height={window.innerHeight} tabIndex ={1} onKeyDown = {this.handleKeyDown} onKeyUp={this.handleKeyUp}/>\n        \n        <button onClick={this.printQuadTree} > Print QuadTree to console </button>   \n        <p>{1000/(this.state.fps +1)}</p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}